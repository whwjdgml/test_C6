#ifndef SENSOR_CONFIG_H
#define SENSOR_CONFIG_H

#include <stdint.h>
#include "driver/gpio.h"

// I2C 핀 설정 - Xiao ESP32C6
// HP Core I2C (High-Power 메인 코어) - 현재 사용 중
#define HP_I2C_SDA_PIN GPIO_NUM_22  // D4 (앞면 핀)
#define HP_I2C_SCL_PIN GPIO_NUM_23  // D5 (앞면 핀)

// LP Core I2C (Low-Power 코어) - 향후 저전력 모드용
#define LP_I2C_SDA_PIN GPIO_NUM_6   // LP Core 전용 SDA (뒷면 핀 또는 확장)
#define LP_I2C_SCL_PIN GPIO_NUM_7   // LP Core 전용 SCL (뒷면 핀 또는 확장)

// 현재 활성 I2C 핀 (HP Core 사용)
#define I2C_SDA_PIN HP_I2C_SDA_PIN
#define I2C_SCL_PIN HP_I2C_SCL_PIN

// AHT20 설정
#define AHT20_ADDR 0x38

// BMP280 설정  
#define BMP280_ADDR_0 0x76
#define BMP280_ADDR_1 0x77

// SCD41 설정
#define SCD41_ADDR 0x62

// SGP40 설정
#define SGP40_ADDR 0x59

// DS3231 RTC 설정
#define DS3231_ADDR 0x68

// 배터리 히터 시스템 핀 설정 (Xiao ESP32C6) - LP Core 호환
#define BATTERY_NTC_ADC_CHANNEL     ADC_CHANNEL_0   // GPIO0 - NTC 온도센서 ADC 입력 (adc_channel_t 타입)
#define BATTERY_NTC_POWER_PIN       GPIO_NUM_1      // GPIO1 - NTC 센서 전원 제어
#define BATTERY_HEATER_PWM_PIN      GPIO_NUM_4      // GPIO4 - 스텝업 컨버터 EN 핀 PWM 제어 (LP Core 호환)
#define STEPUP_CONVERTER_EN_PIN     GPIO_NUM_4      // GPIO4 - 동일한 핀 (PWM으로 EN 제어)
// GPIO5 예비 (향후 확장용)

// Xiao ESP32C6 안테나 제어 핀 설정
#define ANTENNA_SWITCH_PIN          GPIO_NUM_14     // GPIO14 - 안테나 스위치 제어
// 안테나 선택: LOW = 내장 안테나, HIGH = 외부 U.FL 안테나

// 측정 간격 설정 (포천시 기후 맞춤)
#define MEASUREMENT_INTERVAL_MS         5000        // 프로토타입용 (5초)
#define PRODUCTION_SENSOR_INTERVAL_MS   3600000     // 센서 데이터 측정 (1시간)
#define PRODUCTION_SENSOR_INTERVAL_30MIN 1800000   // 기존 30분 주기 (비교용)

// 계절별 배터리 온도 체크 간격 (포천시 기후 최적화)
#define BATTERY_TEMP_CHECK_NORMAL_MS    300000      // 일반 모드 (5분) - 주변온도 > 5°C
#define BATTERY_TEMP_CHECK_WINTER_MS    60000       // 겨울 모드 (1분) - 주변온도 ≤ 5°C  
#define BATTERY_TEMP_CHECK_EXTREME_MS   30000       // 극한추위 모드 (30초) - 주변온도 < -15°C

// 겨울철 배터리 히팅 설정 (포천시 이동면 기후 최적화)
// 포천시 기후 특성: 대륙성 기후, 한서차 심함, 1월 평균 최저 -11.7°C
// 인근 철원: 극저온 -29.2°C (2001년), 1월 평균 최저 -11.8°C

#define BATTERY_TEMP_LOW_C              0.0f        // 히터 켜는 온도 (리튬배터리 성능 저하 방지)
#define BATTERY_TEMP_HIGH_C             8.0f        // 히터 끄는 온도 (에너지 효율성)
#define AMBIENT_TEMP_THRESHOLD_C        5.0f        // 겨울철 모드 활성화 온도
#define EXTREME_COLD_THRESHOLD_C        -15.0f      // 극한 추위 모드 (-15°C 이하)

// PWM 히터 제어 로직 (단열 배터리팩 기준):
//
// 1. 열 손실 분석 (단열재 효과):
//    - 무단열: 열손실 ~100% (주변온도와 평형)
//    - 단열재: 열손실 ~30% (보온 효과 70%)
//    - 필요 전력 = 기존 × 0.3 (단열로 70% 절약)
//
// 2. PWM 적응형 제어:
//    배터리 온도 < -2°C → HEATER_HIGH (75%, 1.9W) - 급속 가열
//    배터리 온도 < 0°C  → HEATER_MED (50%, 1.3W)  - 표준 가열  
//    배터리 온도 < 3°C  → HEATER_LOW (25%, 0.6W)  - 유지 가열
//    배터리 온도 < 6°C  → 이전 상태 유지 (히스테리시스)
//    배터리 온도 ≥ 8°C  → HEATER_OFF (0%, 0W)     - 완전 꺼짐
//
// 3. 주변 온도별 기본 출력:
//    주변 > 5°C   → PWM 제어 비활성화
//    0°C~5°C     → 기본 출력으로 시작  
//    -15°C~0°C   → 중간 출력으로 시작
//    < -15°C     → 고출력으로 시작

// 전력 관리 모드 설정
typedef enum {
    POWER_MODE_NORMAL,      // HP Core I2C (GPIO22/23) - 400kHz, 높은 전력
    POWER_MODE_LOW_POWER    // LP Core I2C (GPIO6/7) - 100kHz, 90% 전력 절약!
} power_mode_t;

// 5V 2.5W PWM 히터 제어 설정
#define HEATER_VOLTAGE_V        5.0f        // 히터 동작 전압 (5V)
#define HEATER_MAX_POWER_W      2.5f        // 히터 최대 전력 (2.5W)
#define HEATER_PWM_FREQ_HZ      1000        // PWM 주파수 (1kHz)
#define HEATER_PWM_MAX_DUTY     255         // PWM 최대 듀티 (8bit)

// PWM 듀티별 전력 계산 (P = V² × (Duty/255)² ÷ R)
// 5V, 2.5W → R = 10Ω, 실제 전력은 듀티비 제곱에 비례
#define HEATER_RESISTANCE_OHM   10.0f       // 히터 저항값

// PWM 듀티별 실제 소모 전력 (제곱 법칙 적용)
#define PWM_25_POWER_W          0.39f       // 25% → 0.25² × 2.5W = 0.39W
#define PWM_50_POWER_W          0.625f      // 50% → 0.5² × 2.5W = 0.625W  
#define PWM_75_POWER_W          1.41f       // 75% → 0.75² × 2.5W = 1.41W
#define PWM_100_POWER_W         2.5f        // 100% → 1² × 2.5W = 2.5W

// 배터리 히터 제어 상태 (PWM 제곱 법칙 적용)
typedef enum {
    HEATER_OFF,             // 히터 꺼짐 (PWM 0%, 0W)
    HEATER_LOW,             // 저출력 (PWM 25%, 0.39W) - 유지 가열
    HEATER_MED,             // 중출력 (PWM 50%, 0.625W) - 표준 가열
    HEATER_HIGH,            // 고출력 (PWM 75%, 1.41W) - 급속 가열
    HEATER_MAX,             // 최대출력 (PWM 100%, 2.5W) - 극한추위용
    HEATER_UNKNOWN          // 초기 상태
} heater_state_t;

// 포천시 기후 적응형 동작 모드
typedef enum {
    CLIMATE_MODE_NORMAL,    // 일반 모드 (주변 온도 > 5°C, 5분 간격)
    CLIMATE_MODE_WINTER,    // 겨울 모드 (5°C ≥ 주변 온도 > -15°C, 1분 간격)  
    CLIMATE_MODE_EXTREME    // 극한추위 모드 (주변 온도 ≤ -15°C, 30초 간격)
} climate_mode_t;

// I2C 주파수 설정
#define HP_I2C_FREQUENCY    400000  // 400kHz (HP Core - 성능 우선)
#define LP_I2C_FREQUENCY    100000  // 100kHz (LP Core - 전력 우선)

// 전력 효율성 가이드 (겨울철 배터리 히팅 시스템 포함):
//
// 운영 시나리오:
// 1. 센서 데이터 측정: 30분마다
// 2. 배터리 온도 감시: 1분마다 (겨울철, 히스테리시스 제어)
// 3. 히터 제어: 온도 < 5°C → ON, 온도 > 10°C → OFF
//
// HP Core 모드:
// - 센서 데이터: 30분마다 Wake-up (48회/일)
// - 배터리 온도: 1분마다 Wake-up (1,440회/일)
// - 총 Wake-up: 1,488회/일
// - 각 Wake-up 시간: ~10ms (400kHz 빠른 통신)
// - 총 Active 시간: 14.88초/일
//
// LP Core 모드:
// - HP Core: 센서 데이터만 30분마다 Wake-up (48회/일)
// - LP Core: 1분마다 배터리 온도 감시 및 히터 제어 (저전력 연속 동작)
// - HP Active 시간: 0.48초/일
// - 전력 비율: HP의 1/31 수준
//
// 포천시 기후 + PWM 히터 전력 소모 시뮬레이션:
//
// === 기존 ON/OFF 제어 vs PWM 제어 비교 ===
//
// 1. 기존 ON/OFF 방식:
//    - 히터 ON: 2.5W (100% 출력)
//    - 동작률: 겨울철 평균 40% (히스테리시스로 On/Off 반복)
//    - 평균 전력: 2.5W × 0.4 = 1.0W
//
// 2. PWM 적응형 제어:
//    - 포천시 겨울 온도 분포별 PWM 출력:
//      * -15°C 이하 (15일): HEATER_HIGH (1.9W) × 80% = 1.52W 평균
//      * -15°C~0°C (70일): HEATER_MED (1.3W) × 60% = 0.78W 평균  
//      * 0°C~5°C (15일): HEATER_LOW (0.6W) × 40% = 0.24W 평균
//    - 겨울철 가중 평균: (1.52×15 + 0.78×70 + 0.24×15) ÷ 100 = 0.82W
//
// 3. 단열재 효과 (70% 열손실 감소):
//    - 실제 필요 전력: 0.82W × 0.3 = 0.25W
//    - 기존 대비 전력 절약: 1.0W → 0.25W (75% 절약!)
//
// === 연간 히터 전력 소모 ===
// 기존: 1.0W × 100일 × 24시간 = 2.4kWh/년
// PWM+단열: 0.25W × 100일 × 24시간 = 0.6kWh/년
// 절약량: 1.8kWh/년 (75% 절약)
//
// 결론: PWM 제어 + 단열재로 히터 전력 80% 절약 + LP Core로 제어 전력 15.8배 절약!
//
// === 최종 전력 소모 분석 (실제 하드웨어 구성 + 기상청 예보 기반 적응형 절전 모드) ===
//
// ▶ 실제 하드웨어 구성:
//   - 배터리: 21700 리튬이온 1s7p (35Ah, 3.7V)
//   - 전압 변환: MCP1700 LDO (3.3V) - 자체소모 2μA
//   - 5V 승압기: EN핀 제어 (필요시만 활성화, 효율 85%)
//   - 히터 제어: PWM + 단열 배터리팩 + 히스테리시스
//
// ▶ 기본 대기 전력 (24시간):
//   - INA226 (상시): 330μA × 24h = 7.92mAh/일
//   - ESP32-C6 딥슬립: 15μA × 24h = 0.36mAh/일
//   - MCP1700 LDO: 2μA × 24h = 0.048mAh/일
//   - LP Core 온도감시: 10μA × 24h = 0.24mAh/일 (겨울철만)
//   ∴ 일반모드 대기: 8.33mAh/일, 겨울모드 대기: 8.57mAh/일
//
// ▶ 센서 측정 전력:
//   - 활성 전류: 59mA (ESP32 + 모든 센서)
//   - 측정 시간: 10초/회
//   - 일반 모드: 59mA × 10초 × 48회 = 7.87mAh/일
//   - 절전 모드: 59mA × 10초 × 12회 = 1.97mAh/일 (CO2, VOC 센서 OFF)
//   - 극한절전: 59mA × 10초 × 6회 = 0.98mAh/일 (온습도+배터리만)
//
// ▶ 히터 전력 (PWM + 단열재 최적화):
//   - 히터 소모: 2.5W → PWM 평균 0.25W → 3.7V 변환 0.294W
//   - 히터 전류: 0.294W ÷ 3.7V = 79.5mA
//   - 실제 동작률: 겨울 10%, 극한추위 25% (단열재 효과)
//
//
// === 기상청 예보 기반 적응형 절전 모드 ===
//
// ▶ 동작 모드 자동 전환:
//   - 일반 모드: 예상 최저온도 > -10°C (모든 센서 동작)
//   - 절전 모드: -20°C < 예상 최저온도 ≤ -10°C (온습도+배터리만)
//   - 극한절전: 예상 최저온도 ≤ -20°C (혹한경보, 배터리 생존 우선)
//
// ▶ 연간 동작 일수 (포천시 기준):
//   - 일반 모드: 250일 (봄/여름/가을)
//   - 겨울 일반: 75일 (겨울철 -10°C 이상)
//   - 절전 모드: 10일 (혹한 주의보)
//   - 극한절전: 5일 (혹한 경보)
//
// === 최종 전력 소모 계산 ===
//
// ▶ 일반 모드 (250일):
//   기본 대기: 8.33mAh/일 (LP Core 온도감시 불필요)
//   센서 측정: 7.87mAh/일 (48회/일, 모든 센서 동작)
//   히터: 0mAh/일 (미사용)
//   ★ 일반 모드: 16.21mAh/일
//
// ▶ 겨울 일반 (75일):
//   기본 대기: 8.57mAh/일 (LP Core 온도감시 포함)
//   센서 측정: 7.87mAh/일 (48회/일, 모든 센서)
//   히터 (10% 동작률): 79.5mA × 2.4h = 191mAh/일
//   ★ 겨울 일반: 207.44mAh/일
//
// ▶ 절전 모드 (10일) - 혹한 주의보:
//   기본 대기: 8.33mAh/일 (전력소모 대형 센서 OFF)
//   센서 측정: 1.97mAh/일 (12회/일, 온습도+배터리만)
//   히터 (15% 동작률): 79.5mA × 3.6h = 286mAh/일
//   ★ 절전 모드: 296.3mAh/일
//
// ▶ 극한추위 (15일) - 극한추위 모드:
//   센서 측정: 30분마다 (48회/일) = LP Core에서 처리
//   배터리 온도: 30초마다 (2,880회/일) = LP Core에서 처리
//   HP Core: Deep Sleep (센서 측정 시만 Wake-up)
//
//   전력 소모 상세:
//   - LP Core 지속: 1mA × 24h = 24mAh/일
//   - HP Core 관련: 156.37mAh/일 (15μA 딥슬립 반영)
//   - PWM 히터 (고출력): 62mA × 16h/일 = 992mAh/일
//   ★ 극한추위 정확한 합계: 1,172.37mAh/일
//
// === 연간 총 전력 소모량 계산 ===
//
// === HP Core vs LP Core 전력 소모 비교 ===
//
// ▶ LP Core 방식 (현재 설계):
//   HP Core Wake-up: 48회/일 (센서 측정만)
//   LP Core: 지속 동작 (1mA)
//   배터리 온도 체크: LP Core에서 처리
//
// ▶ HP Core 방식 (비교용):
//   HP Core Wake-up: 48회/일 (센서) + 288~2,880회/일 (배터리 온도)
//   = 336~2,928회/일 (6.1~60.8배 더 많음!)
//
//
// ▶ 극한절전 (5일) - 혹한경보:
//   기본 대기: 8.57mAh/일 (LP Core 온도감시 포함)
//   센서 측정: 0.98mAh/일 (6회/일, 온습도+배터리만)
//   히터 (25% 동작률): 79.5mA × 6h = 477mAh/일
//   ★ 극한절전: 486.55mAh/일
//
// === 연간 총 전력 소모 (기상청 예보 기반 적응형 절전) ===
//
// ▶ 연간 소모량:
// - 일반 모드: 16.21mAh × 250일 = 4,053mAh
// - 겨울 일반: 207.44mAh × 75일 = 15,558mAh  
// - 절전 모드: 296.3mAh × 10일 = 2,963mAh
// - 극한절전: 486.55mAh × 5일 = 2,433mAh
// ★ 연간 총 소모: 25,007mAh = 25.0Ah
//
// === 21700 1s7p 배터리팩 (35Ah) 분석 ===
//
// ▶ 배터리 용량 분석:
//   - 명목 용량: 35Ah (5,000mAh × 7개)
//   - 사용 가능: 28Ah (80% DOD)
//   - 연간 필요: 25.0Ah
//   - 여유 용량: 3.0Ah (12% 마진)
//
// ▶ 운영 전략:
//   - 봄 시작 (3월): 완충 → 일반모드 250일
//   - 겨울 직전 (11월): 완충 → 겨울모드 90일  
//   - 기상청 예보로 자동 절전모드 전환
//   - 1년 2회 충전으로 안정적 운영 가능!
//
// ★ 최종 결론: 21700 1s7p (35Ah)로 충분! 기상청 예보 기반 절전으로 25Ah/년
//
// === 적응형 절전 모드 구현 설정 ===
//
// ▶ 기상청 예보 기반 자동 모드 전환 로직:
typedef enum {
    CLIMATE_ADAPTIVE_NORMAL,    // 예상최저 > -10°C: 모든 센서, 30분 간격
    CLIMATE_ADAPTIVE_POWER_SAVE, // -20°C < 예상최저 ≤ -10°C: 온습도+배터리, 2시간 간격  
    CLIMATE_ADAPTIVE_EMERGENCY   // 예상최저 ≤ -20°C: 온습도+배터리, 4시간 간격
} climate_adaptive_mode_t;
//
// ▶ 센서 활성화/비활성화 설정:
// - 일반 모드: AHT20 + BMP280 + SCD41 + SGP40 + INA226
// - 절전 모드: AHT20 + INA226 (BMP280, SCD41, SGP40 OFF)
// - 극한절전: AHT20 + INA226 (나머지 모두 OFF)
//
// ▶ 측정 주기 동적 조정:
// - 일반: 30분 간격 (48회/일)
// - 절전: 2시간 간격 (12회/일) 
// - 극한절전: 4시간 간격 (6회/일)
//
// ▶ 히터 제어 우선순위:
// - 일반: 히터 비활성화
// - 절전: 배터리 온도 0°C 이상 유지 (10% 듀티)
// - 극한절전: 배터리 생존 온도 유지 최우선 (25% 듀티)
//
// === 주요 전력 소모 구성비 ===
// 1. 기타 시스템: 120mAh/일 (76.8%) - 가장 큰 비중
// 2. LP Core: 24mAh/일 (15.4%)
// 3. 센서: 12mAh/일 (7.7%) 
// 4. HP Core: 0.25mAh/일 (0.1%) - 매우 적음
// 5. 겨울철 히터: 496~992mAh/일 (추가)
//
// 결론: 30분 간격 측정으로도 전력 소모는 극도로 적음!
//
// === 1시간 간격 측정으로 변경 시 전력 소모 ===
//
// ▶ 1시간 간격 (24회/일) vs 30분 간격 (48회/일) 비교:
//
// 1시간 간격 센서 측정:
// - 하루 측정: 24회/일 (기존 48회의 절반)
// - 연간 측정: 24 × 365 = 8,760회/년 (기존 17,520회의 절반)
// - 연간 동작시간: 87.6초/년 (기존 175.2초의 절반)
//
// ▶ 1시간 간격 일일 전력 소모:
//
// 일반 모드 (250일):
// - LP Core: 24mAh (동일)
// - HP Core Deep Sleep: 0.36mAh (15μA 기준)
// - HP Core Wake-up: 80mA × (10ms × 24회) ÷ 3600000ms = 0.0053mAh
// - 센서 측정: 24mA × (10ms × 24회) ÷ 3600000ms = 0.0016mAh
// - 센서 대기: 12mAh (동일)
// - 기타: 120mAh (동일)
// ★ 1시간 간격 일반모드: 156.37mAh/일 → 156.24mAh/일 (거의 동일!)
//
// 겨울/극한추위 모드: 156.25mAh + 히터 전력 (변화 없음)
//
// === 결론: 측정 주기 변경의 전력 절약 효과 ===
//
// 30분 → 1시간 변경 시 절약량:
// - Wake-up 전력: 0.011mAh → 0.0053mAh (0.006mAh 절약)
// - 센서 측정 전력: 0.003mAh → 0.0016mAh (0.001mAh 절약)
// - 총 절약: 0.007mAh/일 (0.004% 절약)
//
// ★ 놀라운 결과: 1시간으로 변경해도 전력 절약 거의 없음!
//   → 이미 센서 전력이 전체의 0.1% 수준이라 의미 없음
//   → 200Ah 배터리 용량 요구사항 변화 없음
//
// === 배터리팩 구성 예시 ===
// 옵션 1: 18650 배터리 (3,200mAh) × 63개 = 201.6Ah
// 옵션 2: 21700 배터리 (5,000mAh) × 40개 = 200Ah  
// 옵션 3: LiFePO4 팩 (3.2V 200Ah) + 전압 변환
//
// === 배터리 수명 및 안전성 고려사항 ===
//
// ▶ 포천시 저온 환경 대응:
//   - 리튬배터리 저온 성능: -10°C에서 용량 80%, -20°C에서 60%
//   - 배터리 히터로 0°C 이상 유지 → 용량 손실 최소화
//   - LiFePO4 선택 시: 더 안전하지만 에너지 밀도 낮음
//
// ▶ 배터리 수명 연장 전략:
//   - 충방전 깊이(DOD): 80% 이하 유지 (수명 2-3배 연장)
//   - 충전 전압: 4.1V 이하 (4.2V 만충전 지양)
//   - 보관 온도: 15°C±5°C (히터로 온도 관리)
//   - 정기 밸런싱: 월 1회 완전충전
//
// ▶ 실제 운영 시나리오:
//   - 1년차: 200Ah 용량으로 여유롭게 운영
//   - 2-3년차: 160-180Ah 용량으로도 충분 (열화 고려)
//   - 4-5년차: 배터리 교체 또는 용량 증설 검토
//
// ★ 최종 권장: 200Ah 3.7V 리튬배터리팩 (1년 무충전 운영 가능)

// 센서 데이터 유효 범위 (프로토타입용 검증)
#define TEMP_MIN_C          -40.0f
#define TEMP_MAX_C          85.0f
#define HUMIDITY_MIN_PCT    0.0f
#define HUMIDITY_MAX_PCT    100.0f
#define PRESSURE_MIN_HPA    300.0f
#define PRESSURE_MAX_HPA    1100.0f
#define CO2_MIN_PPM         400.0f
#define CO2_MAX_PPM         10000.0f
#define VOC_MIN_INDEX       0.0f
#define VOC_MAX_INDEX       500.0f
#define VOLTAGE_MIN_V       2.5f
#define VOLTAGE_MAX_V       5.5f
#define CURRENT_MIN_MA      -2000.0f
#define CURRENT_MAX_MA      2000.0f

// === 실제 운영 가이드 ===
//
// ▶ 충전 스케줄:
//   1. 3월 초: 100% 완충 → 일반모드 250일
//   2. 11월 말: 100% 완충 → 겨울모드 90일  
//   3. 기상청 혹한경보 시 충전량 체크
//
// ▶ 시스템 최적화 달성:
//   - 기상청 예보 기반 지능형 절전 모드
//   - PWM + 단열재로 히터 전력 80% 절약
//   - 35Ah 배터리로 1년 무충전 운영!

#endif